fitMeasures(cfa_maq, fit.measures = c("chisq.scaled", 'df', 'gfi','cfi.scaled', 'tli.scaled', 'rmsea.scaled',
'rmsea.ci.lower.scaled', 'rmsea.ci.upper.scalled', 'srmr', "aic", 'bic','ecvi'))
fitMeasures(cfa_maq, fit.measures = c('chisq.scaled', 'df', 'gfi','cfi.scaled', 'tli.scaled', 'rmsea.scaled',
'rmsea.ci.lower.scaled', 'rmsea.ci.upper.scalled', 'srmr', "aic", 'bic','ecvi'))
fitmeasures(cfa_maq, fit.measures = c('chisq.scaled', 'df', 'gfi','cfi.scaled', 'tli.scaled', 'rmsea.scaled',
'rmsea.ci.lower.scaled', 'rmsea.ci.upper.scalled', 'srmr', "aic", 'bic','ecvi'))
cfa_maq <- cfa_model_maq %>% cfa(data=df2, estimator='dwls', orthogonal=FALSE, ordered=TRUE)
cfa_maq
fitMeasures(cfa_maq, fit.measures = c('chisq.scaled', 'df', 'gfi','cfi.scaled', 'tli.scaled', 'rmsea.scaled',
'rmsea.ci.lower.scaled', 'rmsea.ci.upper.scalled', 'srmr', "aic", 'bic','ecvi'))
cfa_maq %>% fitMeasures(fit.measures = c('chisq.scaled', 'df', 'gfi','cfi.scaled', 'tli.scaled', 'rmsea.scaled',
'rmsea.ci.lower.scaled', 'rmsea.ci.upper.scalled', 'srmr', "aic", 'bic','ecvi'))
fitmeasures(cfa_maq, fit.measures = "all")
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', 'gfi','cfi.scaled', 'tli.scaled', 'rmsea.scaled',
'rmsea.ci.lower.scaled', 'rmsea.ci.upper.scalled', 'srmr', "aic", 'bic','ecvi'))
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', 'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi'))
parameterEstimates(cfa_results_maq, standardized = TRUE) %>% filter(op=='=~') %>%
select('Dimensão'=lhs, Item=rhs, B=est, SE=se, Z=z, 'p-valor'=pvalue, Beta=std.all)
cfa_results_maq$FIT %>% knitr::kable()
round(cfa_results_maq$FIT, digits = 2) %>% knitr::kable()
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = FALSE,
edge.label.cex = 1,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1,5,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1,5,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.5,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='blue', man = 'pink'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=FALSE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi'))
# summary(cfa_maq, standardized = TRUE)
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% kable()
# summary(cfa_maq, standardized = TRUE)
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% knitr::kable()
library(knitr)
library(pander)
# summary(cfa_maq, standardized = TRUE)
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% pander()
cfa_maq <- cfa_model_maq %>% cfa(data=df2, estimator='MLM', orthogonal=FALSE, ordered=TRUE)
cfa_model_maq %>% cfa(data=df2, estimator='WLSMV', orthogonal=FALSE, ordered=TRUE)
cfa_model_maq %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
cfa_maq
cfa_results_maq <- summary(cfa_maq, standardized=TRUE, fit.measures=TRUE, modindices=FALSE)
cfa_results_maq
cfa_results_maq <- summary(cfa_maq, standardized=TRUE, fit.measures=TRUE, modindices=TRUE)
cfa_results_maq
fitmeasures(cfa_maq, fit.measures = "all")
library(readxl)
library(tidyverse)
library(knitr)
library(pander)
library(psych)
# install.packages("lavaan")
library(lavaan)
# install.packages("semPlot")
library(semPlot)
summary(cfa_maq, standardized=TRUE, fit.measures=TRUE, modindices=TRUE)
summary(cfa_maq, standardized = TRUE)
fitmeasures(cfa_maq, fit.measures = "all")
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% pander()
round(cfa_results_maq$FIT, digits = 2) %>% knitr::kable()
round(cfa_results_maq$FIT, digits = 2)
cfa_results_maq$FIT
# parameterEstimates(cfa_results_maq, standardized = TRUE) %>% filter(op=='=~') %>%
#   select('Dimensão'=lhs, Item=rhs, B=est, SE=se, Z=z, 'p-valor'=pvalue, Beta=std.all)
cfa_results_maq$fit
round(cfa_results_maq$fit, digits = 2)
round(cfa_results_maq$fit, digits = 2) %>% kable()
round(cfa_results_maq$fit, digits = 3) %>% kable()
cfa_results_maq$
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
cfa_results_maq$pe
cfa_results_maq$mi
cfa_results_maq$mi %>% decreasing = TRUE
library(readxl)
library(tidyverse)
library(knitr)
library(pander)
library(psych)
# install.packages("lavaan")
library(lavaan)
# install.packages("semPlot")
library(semPlot)
library(GPArotation)
cfa_results_maq$mi %>% decreasing = TRUE
?arrange()
cfa_results_maq %>% modindices() %>% arrange(desc(epc))
mi <- modindices(cfa_results_maq)
cfa_maq %>% modindices() %>% arrange(desc(epc))
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% pander()
info =~ maq6+maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
cfa_model_maq <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq6+maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
# Análise
cfa_maq <- cfa_model_maq %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% pander()
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
# Modelo
cfa_model_maq <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq6+maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
# Análise
cfa_maq <- cfa_model_maq %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
# Modelo
cfa_model_maq <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq_7+maq_8+maq_9+maq_10+maq_11+maq_12
maq_7 ~~ maq_10'
# Análise
cfa_maq <- cfa_model_maq %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% pander()
cfa_model_maq <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq_7+maq_8+maq_9+maq_10+maq_11+maq_12
info =~  maq_6'
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% pander()
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
cfa_model_maq
cfa_model_maq <- 'form =~ maq_3+maq_4+maq_5
info =~ maq_6+maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
#
cfa_maq %>% fitMeasures(fit.measures = c('chisq', 'df', "pvalue",'gfi','cfi', 'tli', 'rmsea',
'rmsea.ci.lower', 'rmsea.ci.upper', 'srmr', "aic", 'bic','ecvi')) %>% pander()
library(readxl)
library(tidyverse)
library(knitr)
library(pander)
library(psych)
# install.packages("lavaan")
library(lavaan)
# install.packages("semPlot")
library(semPlot)
library(GPArotation)
#
cfa_maq %>%
fitMeasures(fit.measures = c('chisq','df',"pvalue",'gfi','cfi','tli','rmsea',
'rmsea.ci.lower','rmsea.ci.upper','srmr',"aic",'bic','ecvi')) %>% pander()
cfa_maq %>% fitmeasures(fit.measures = "all")
cfa_results_maq$fit
?semPaths()
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree2',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'circle',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'spring',
rotation = 2,
edge.color = 'purple',
color = list(lat='deepskyblue', man = 'grey'),
normalize=TRUE)
cfa_model_maq <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
# Modelo (tem que selecionar todo o código pra rodar a análise)
cfa_mod1 <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
# Análise
cfa_fit1 <- cfa_model_maq %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
# Análise
cfa_fit1 <- cfa_mod1 %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
# Índices de ajuste
cfa_res1 <- summary(cfa_fit1, standardized=TRUE, fit.measures=TRUE, modindices=TRUE)
summary(cfa_fit1, standardized = TRUE)
cfa_fit1 %>%
fitMeasures(fit.measures = c('chisq','df',"pvalue",'gfi','cfi','tli','rmsea',
'rmsea.ci.lower','rmsea.ci.upper','srmr',"aic",'bic','ecvi')) %>%
pander()
# ... ou pedir todos os índices de ajuste
cfa_fit1 %>% fitmeasures(fit.measures = "all")
semPaths(cfa_maq,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=TRUE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=TRUE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.5,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=TRUE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 2,
layout = 'tree',
rotation = 2,
edge.color = 'purple',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=TRUE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 2,
layout = 'tree',
rotation = 2,
edge.color = 'black',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=TRUE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 2,
layout = 'tree',
rotation = 2,
edge.color = 'blue',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=TRUE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 2,
layout = 'tree',
rotation = 2,
edge.color = 'darkblue',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=TRUE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 2,
layout = 'tree',
rotation = 2,
edge.color = 'darkblue',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=FALSE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'darkblue',
color = list(lat='cornflowerblue', man = 'hotpink'),
normalize=FALSE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'darkblue',
color = list(lat='cornflowerblue', man = 'hotpink'),
asize = 1,
normalize=FALSE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'darkblue',
color = list(lat='cornflowerblue', man = 'hotpink'),
asize = 1.5,
normalize=FALSE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.3,
layout = 'tree',
rotation = 2,
edge.color = 'darkblue',
color = list(lat='cornflowerblue', man = 'hotpink'),
asize = 1.5,
normalize=FALSE)
semPaths(cfa_fit1,
whatLabels = "std",
intercepts = FALSE,
residuals = TRUE,
edge.label.cex = 1.0,
layout = 'tree',
rotation = 2,
edge.color = 'darkblue',
color = list(lat='cornflowerblue', man = 'hotpink'),
asize = 1.5,
normalize=FALSE)
info =~ maq_6+maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
cfa_mod1 <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq_6+maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
cfa_mod1 %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
# Análise
cfa_fit1 <- cfa_mod1 %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
# Índices de ajuste
cfa_res1 <- summary(cfa_fit1, standardized=TRUE, fit.measures=TRUE, modindices=TRUE)
cfa_fit1 %>%
fitMeasures(fit.measures = c('chisq','df',"pvalue",'gfi','cfi','tli','rmsea',
'rmsea.ci.lower','rmsea.ci.upper','srmr',"aic",'bic','ecvi')) %>%
pander()
info =~ maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
# Análise
cfa_fit1 <- cfa_mod1 %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
cfa_mod1 <- 'form =~ maq_3+maq_4+maq_5+maq_6
info =~ maq_7+maq_8+maq_9+maq_10+maq_11+maq_12'
# Análise
cfa_fit1 <- cfa_mod1 %>% cfa(data=df2, estimator='DWLS', orthogonal=FALSE, ordered=TRUE)
# Índices de ajuste
cfa_res1 <- summary(cfa_fit1, standardized=TRUE, fit.measures=TRUE, modindices=TRUE)
cfa_fit1 %>%
fitMeasures(fit.measures = c('chisq','df',"pvalue",'gfi','cfi','tli','rmsea',
'rmsea.ci.lower','rmsea.ci.upper','srmr',"aic",'bic','ecvi')) %>%
pander()
# ... ou pedir todos os índices de ajuste
cfa_fit1 %>% fitmeasures(fit.measures = "all")
cfa_scor <- data.frame(lavPredict(cfa_fit1, type = "lv", method = "regression"))
cfa_scor
cfa_scor %>% cor.plot()
names(df2)
df2 %>% select(maq_3::maq_12) %>% polychoric(.)
df2 %>% select(maq_3:maq_12) %>% polychoric(.)
# ===========
maq_poly <- df2 %>% select(maq_3:maq_12) %>% polychoric(.)
maq_poly$rho
scree(maq_poly$rho)
# KMO usando as correlações com dados ordinais (rho)
KMO(maq_poly$rho)
?principal()
principal(maq_poly$rho, n.obs = nrow(df2), nfactors = 2, rotate = "oblimin")
nrow(df2)
fa.parallel(maq_poly$rho, n.obs = nrow(df2))
principal(maq_poly$rho, n.obs = nrow(df2), nfactors = 1, rotate = "oblimin")
principal(maq_poly$rho, n.obs = nrow(df2), nfactors = 1, rotate = "bifactor")
principal(maq_poly$rho, n.obs = nrow(df2), nfactors = 2, rotate = "bifactor")
principal(maq_poly$rho, n.obs = nrow(df2), nfactors = 2, rotate = "promax")
